"""
Jude Arthur
10/19/17
This security layer inadequately handles A/B storage for files in RepyV2.
Note:
This security layer uses encasementlib.r2py, restrictions.default, repy.py and Python
Also you need to give it an application to run.
python repy.py restrictions.default encasementlib.r2py [security_layer].r2py [attack_program].r2py 
""" 

TYPE="type"
ARGS="args"
RETURN="return"
EXCP="exceptions"
TARGET="target"
FUNC="func"
OBJC="objc"

class ABFile():
    def __init__(self,filename,create):
    # globals
    mycontext['debug'] = False   

    # filename ascii values bettwen lowercase
    # how to iterate through a string
    str
     for x in filename:
        if (96 < ord(x) or ord(x) > 122) and ord(x) != 46:
            str =+x
        else
            exitall
    
    arr = filename.split('.')
    if len(arr) > 2:
        exitall
    
    # local (per object) reference to the underlying file
    self.Afn = filename+'.a'
    self.Bfn = filename+'.b'
    createlock() #lock

    # make the files and add 'SE' to the readat file...
    if create:
      self.Afile = openfile(self.Afn,create)
      self.Bfile = openfile(self.Bfn,create)
      lock.acquire(true)
      self.Afile.writeat('SE',0)
      lock.release()


  def writeat(self,data,offset):
    # Write the requested data to the B file using the sandbox's writeat call
    lock.acquire(true)
    self.Bfile.writeat(data,offset)
    lock.release()
  
  def readat(self,bytes,offset):
    # Read from the A file using the sandbox's readat...
    return self.Afile.readat(bytes,offset)

  def close(self):
    lock.acquire(true)
    for line in self.Bfile
        if line[0] == 'S' and self.Bfile.seek(-1,2) == 'E': 
            true
        else:
            removeFile(self.Bfile)
            exitall
    lock.release()
    #check filename se
    self.Afile.close()
    self.Bfile.close()


def ABopenfile(filename, create):
  return ABFile(filename,create)




# The code here sets up type checking and variable hiding for you.  You
# should not need to change anything below here.
sec_file_def = {"obj-type":ABFile,
                "name":"ABFile",
                "writeat":{"type":"func","args":(str,(int,long)),"exceptions":Exception,"return":(int,type(None)),"target":ABFile.writeat},
                "readat":{"type":"func","args":((int,long,type(None)),(int,long)),"exceptions":Exception,"return":str,"target":ABFile.readat},
                "close":{"type":"func","args":None,"exceptions":None,"return":(bool,type(None)),"target":ABFile.close}
           }

CHILD_CONTEXT_DEF["ABopenfile"] = {TYPE:OBJC,ARGS:(str,bool),EXCP:Exception,RETURN:sec_file_def,TARGET:ABopenfile}

# Execute the user code
secure_dispatch_module()