TYPE="type"
ARGS="args"
RETURN="return"
EXCP="exceptions"
TARGET="target"
FUNC="func"
OBJC="objc"

class ABFile():
  def __init__(self,filename,create):
    # globals
    mycontext['debug'] = False   
    # local (per object) reference to the underlying file
    self.Afn = filename+'.a'
    self.Bfn = filename+'.b'

    symbol = 0
    if self.Afn in listfiles():
      symbol = 1

    self.Afile = openfile(self.Afn,create)
    self.Bfile = openfile(self.Bfn,create)

    if symbol == 0:
      self.Afile.writeat('SE',0)
    else:
      strSouce = self.Afile.readat(None,0)
      self.Bfile.writeat(strSouce,0)

  def writeat(self,data,offset):  
    # Write the requested data to the B file using the sandbox's writeat call
    self.Bfile.writeat(data,offset)
  
  def readat(self,bytes,offset):
    # Read from the A file using the sandbox's readat...
    return self.Afile.readat(bytes,offset)

  def close(self):
    strVarB = self.Bfile.readat(None,0)
    strVarA = self.Afile.readat(None,0)
    self.Afile.close()
    self.Bfile.close()
    removefile(self.Afn)
    removefile(self.Bfn)
    self.finalFile = openfile(self.Afn,True)
    if (len(strVarB) > 0 and strVarB[0] == 'S' and strVarB[len(strVarB)-1] == 'E'):
      self.finalFile.writeat(strVarB,0)
    else:
      self.finalFile.writeat(strVarA,0)
    self.finalFile.close()
    



def ABopenfile(filename, create):
  return ABFile(filename,create)




# The code here sets up type checking and variable hiding for you.  You
# should not need to change anything below here.
sec_file_def = {"obj-type":ABFile,
                "name":"ABFile",
                "writeat":{"type":"func","args":(str,(int,long)),"exceptions":Exception,"return":(int,type(None)),"target":ABFile.writeat},
                "readat":{"type":"func","args":((int,long,type(None)),(int,long)),"exceptions":Exception,"return":str,"target":ABFile.readat},
                "close":{"type":"func","args":None,"exceptions":None,"return":(bool,type(None)),"target":ABFile.close}
           }

CHILD_CONTEXT_DEF["ABopenfile"] = {TYPE:OBJC,ARGS:(str,bool),EXCP:Exception,RETURN:sec_file_def,TARGET:ABopenfile}

# Execute the user code
secure_dispatch_module()